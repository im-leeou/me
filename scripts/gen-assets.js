const fs = require('fs');

const getFilenames = (folderPath) => {
  const files = fs.readdirSync(folderPath);
  return files
    .filter((filename) => filename !== 'index.ts')
    .map((file) => file.split('.')[0]);
};

const convertComponentName = ({ filename, prefix }) => {
  const camelCasedFilename = filename
    .replace('i-', '')
    .replaceAll(/-./g, (replacedStr) => replacedStr[1].toUpperCase());

  const capitalizedFilename =
    camelCasedFilename.charAt(0).toUpperCase() + camelCasedFilename.slice(1);

  return `${prefix}${capitalizedFilename}`;
};

const genExportsCode = ({ targetFilepath, code }) => {
  const generatedCode = `// This file is auto-generated by run "npm run gen-assets"; DO NOT EDIT.\n\n${code}
`;

  fs.writeFileSync(targetFilepath, generatedCode);
};

const generate = ({ folderPath, targetFilepath, ext, prefix }) => {
  const svgFilenames = getFilenames(folderPath);

  const genExportComponent = (filename) => {
    return `export { default as ${convertComponentName({ filename, prefix })} } from './${filename}.${ext}';`;
  };

  const exportComponents = svgFilenames.map(genExportComponent).join('\n');

  genExportsCode({
    targetFilepath,
    code: exportComponents
  });
};

generate({
  folderPath: 'src/assets/svgs',
  targetFilepath: 'src/assets/svgs/index.ts',
  ext: 'svg',
  prefix: 'Icon'
});

generate({
  folderPath: 'src/assets/lotties',
  targetFilepath: 'src/assets/lotties/index.ts',
  ext: 'json',
  prefix: 'Lottie'
});
