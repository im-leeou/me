const fs = require('fs');

const DEFAULT_PREFIX = 'Other';

const ComponentPrefix = {
  i: 'Icon',
  lt: 'Animation'
};

const normalizeFileInfos = (folderPath) => {
  const files = fs.readdirSync(folderPath);

  return files
    .filter((fileName) => fileName !== 'index.ts')
    .map((fileName) => {
      const [filename, ext] = fileName.split('.');

      return {
        filename,
        ext
      };
    });
};

const parseComponentNameByFilename = (filename) => {
  const compactPrefix = filename.split('-')[0];

  let prefix = DEFAULT_PREFIX;
  if (ComponentPrefix[compactPrefix]) {
    prefix = ComponentPrefix[compactPrefix];
  }

  const removedCompactedPrefix = filename.replace(`${compactPrefix}`, '');

  const camelCasedFilename = removedCompactedPrefix.replaceAll(
    /-./g,
    (replacedStr) => replacedStr[1].toUpperCase()
  );

  return `${prefix}${camelCasedFilename}`;
};

const genExport = ({ componentName, fileName }) => {
  return `export { default as ${componentName} } from './${fileName}';\n`;
};

const generateAssetComponents = ({ folderPath, targetFilepath }) => {
  const normalizedFiles = normalizeFileInfos(folderPath);

  const exportsCode = normalizedFiles.map(({ filename, ext }) =>
    genExport({
      componentName: parseComponentNameByFilename(filename),
      fileName: `${filename}.${ext}`
    })
  );

  const prettiedCode = `// This file is auto-generated by run "npm run gen-assets"; DO NOT EDIT.\n\n${exportsCode.join('')}`;

  fs.writeFileSync(targetFilepath, prettiedCode);
};

generateAssetComponents({
  folderPath: 'src/assets/svgs',
  targetFilepath: 'src/assets/svgs/index.ts'
});

generateAssetComponents({
  folderPath: 'src/assets/lotties',
  targetFilepath: 'src/assets/lotties/index.ts'
});
